version: '3.4'
networks:
  protobuf:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.0.0
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    networks:
      - protobuf
    tty: true

  kafka:
    image: confluentinc/cp-kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_EXT://localhost:9092,LISTENER_INT://kafka:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_CREATE_TOPICS=loan:1:1,payment:1:1,loan_intake:1:1,payment_intake:1:1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_EXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - protobuf
    depends_on:
      - zookeeper
    tty: true

  schema-registry:
    image: confluentinc/cp-schema-registry:5.0.0
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL: none
    networks:
      - protobuf

  schema-registry-ui:
    image: landoop/schema-registry-ui
    container_name: schema-registry-ui
    ports:
      - 12000:8000
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
    depends_on:
      - schema-registry
    networks:
      - protobuf
    tty: true

  ksql-server:
    image: confluentinc/cp-ksql-server:5.0.0
    container_name: ksql-server
    ports:
      - 8088:8088
    depends_on:
      - kafka
      - schema-registry
    networks:
      - protobuf
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:29092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:5.0.0
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    networks:
      - protobuf
    environment:
      # KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
    depends_on:
      - zookeeper
      - kafka
      - schema-registry

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:0.9.4
    hostname: kafka-topics-ui
    ports:
      - "8001:8000"
    networks:
      - protobuf
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      PROXY: "true"
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - kafka-rest-proxy
